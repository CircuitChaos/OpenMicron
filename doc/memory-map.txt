Some random facts:

- total memory size seems to be 32kB (0x8000):
  - reading past 0x8000 rolls back (data at 0x0123 is the same as at 0x8123, and so on)
  - progress bar resets at 0x8000 too
- only first 16kB (0x4000) is used (next 16kB is filled with 0xff)
- original program reads only 0x32a0 (12960) bytes
- original program reads data in 16-byte chunks
- I decided to read only 0x1990 bytes into .omi file by default

What I found in the memory map:

offset	size	meaning
---------------------------------------------------
0x0000	6400	channel table; 200 channels, 32 bytes each
0x1900	96	to be determined (maybe config?)
0x1960	25	scan flags, see below
0x1979	7	0x00, maybe padding for scan flags
0x1980	7	welcome message, right-padded with spaces
0x1987	9	0x00
0x1990	320	0xff
0x1ad0	16	?
0x1ae0	48	0x00
0x1b10	7	88888<space><space>, maybe some password?
0x1b17	25	0x00
0x1b30	7	12345<space><space>, as above
0x1b37	25	0x00
0x1b50	7	23456<space><space>, as above
0x1b57	25	0x00
0x1b70	7	34567<space><space>, as above
0x1b77	25	0x00
0x1b90	7	45678<space><space>, as above
0x1b97	25	0x00
0x1bb0	48	0x00
0x1be0	96	?, all 0x00 except 0x1be3 (= 0x46) and 0x1c03 (= 0x46)
0x1c40	64	?
0x1c80	5216	0x00
0x30e0	16	?, first byte 0x01, rest 0x00
0x30f0	272	0xff
0x3200	32	?
0x3220	32	0x00
0x3240	96	?
0x32a0	2144	0xff
0x3b00	11	model name and version: "MICRON<00>V100"
0x3b0b	9	?: 01 00 01 00 01 02 ff ff ff
0x3b14	28	0x00
0x3b30	9	date (maybe software build date?): 2018-8-24
0x3b39	15	0x00
0x3b48	8	0xff
0x3b50	160	0x00
0x3bf0	208	0xff
0x3cc0	288	?, looks like bitmap
0x3de0	32	0xff
0x3e00	91	?
0x3e5b	165	0xff
0x3f00	16	?: 00 02 02 02 02 02 02 02 02 ff ff ff ff ff ff ff
0x3f10	16	?: 00 02 02 02 02 02 02 02 02 ff ff ff ff ff ff ff
0x3f20	16	?: 00 01 01 01 01 01 01 01 01 ff ff ff ff ff ff ff
0x3f30	16	?: 00 01 01 01 01 01 01 01 01 ff ff ff ff ff ff ff
0x3f40	128	?
0x3fc0	56	0xff
0x3ff8	8	my CRT Micron has "AT778-UV" here
0x4000	16384	0xff

Channel format:

ofs	size	meaning
----------------------------------------------------------
0x00	4	rx frequency in bcd format (example: 43 93 50 00 = 439.35000 MHz)
0x04	4	rx frequency shift in bcd format (example: 00 00 00 00 or 00 76 00 00 for 7.60000 MHz)
0x08	1	?
0x09	1	flags 1
0x0a	1	flags 2
0x0b	1	ctcss flags
0x0c	1	rx ctcss index (0x14 = 127.3, 0x15 = 131.8, 0x33 = define)
0x0d	1	tx ctcss index (0 = 62.5, 1 = 67.0, 0x14 = 127.3, 0x33 = define)
0x0e	1	rx dcs index (0x03 = 003, 0x0a = 012)
0x0f	1	rx dcs flags
0x10	1	tx dcs index (0x05 = 005, without it's 0x11)
0x11	1	tx dcs flags
0x12	1	bcl mode (0 = off, 1 = rpt, 2 = busy)
0x13	1	pttid flag (0 = off, 1 = begin, 2 = end, 3 = both, 0x10 = 5tone begin, 0x20 = 5tone end, 0x30 = 5tone both)
0x14	1	squelch mode (0 = carrier, 1 = ctcss/dcs, 2 = optional signaling)
0x15	1	optional signaling flag (0 = off, 1 = dtmf, 3 = 5tone)
0x16	1	?
0x17	1	?
0x18	1	?
0x19	5	channel name, space-padded to the right
0x1e	2	defined ctcss (cf 09 -> 0x9cf -> 2511 -> 251.1)

0x09 flags:
- bit 7: talkaround (0 = off, 1 = on)
- bit 6: ?
- bit 5: ?
- bit 4: ?
- bits 32: txpower (00 = low, 01 = medium, 10 = high)
- bits 10: shift direction (00 = off, 01 = up, 10 = down)

0x0a flags:
- bit 7: ?
- bit 6: ?
- bit 5: ?
- bit 4: ?
- bits 32: channel spacing (00 = 12.5kHz, 01 = 20 kHz, 10 = 25kHz)
- bit 1: reverse (0 = reverse off, 1 = reverse on)
- bit 0: txoff (0 = tx permitted, 1 = tx forbidden)

0x0b flags:
- bit 7654: dtmf optional signaling digit (0000 = M1, 0001 = M2, 0010 = M3, ..., 1110 = M15, 1111 = M16)
- bit 3: rx dcs (0 = off, 1 = on)
- bit 2: rx ctcss (0 = off, 1 = on)
- bit 1: tx dcs (0 = off, 1 = on)
- bit 0: tx ctcss (0 = off, 1 = on)

dcs flags:
- bit 7: ?
- bit 6: ?
- bit 5: ?
- bit 4: ?
- bit 3: ?
- bit 2: ?
- bit 1: invert (0 = off, 1 = on)
- bit 0: msb of dcs

Scan flags start at 0x1960 (bitmap) and end at 0x1978 (25 bytes).

Byte 1 is for channels 1...8 (bit 0 = chan 1, bit 1 = chan 2, etc.), byte 
2 for 9...15, and so on. 1 means that scanning is enabled.

